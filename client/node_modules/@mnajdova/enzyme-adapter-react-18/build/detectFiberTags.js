"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _enzymeAdapterUtils = require("enzyme-adapter-utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function getFiber(element) {
  var container = global.document.createElement('div');
  var inst = null;

  var Tester = /*#__PURE__*/function (_React$Component) {
    _inherits(Tester, _React$Component);

    var _super = _createSuper(Tester);

    function Tester() {
      _classCallCheck(this, Tester);

      return _super.apply(this, arguments);
    }

    _createClass(Tester, [{
      key: "render",
      value: function render() {
        inst = this;
        return element;
      }
    }]);

    return Tester;
  }(_react["default"].Component);

  _reactDom["default"].render( /*#__PURE__*/_react["default"].createElement(Tester), container);

  return inst._reactInternals.child;
}

function getLazyFiber(LazyComponent) {
  var container = global.document.createElement('div');
  var inst = null; // eslint-disable-next-line react/prefer-stateless-function

  var Tester = /*#__PURE__*/function (_React$Component2) {
    _inherits(Tester, _React$Component2);

    var _super2 = _createSuper(Tester);

    function Tester() {
      _classCallCheck(this, Tester);

      return _super2.apply(this, arguments);
    }

    _createClass(Tester, [{
      key: "render",
      value: function render() {
        inst = this;
        return /*#__PURE__*/_react["default"].createElement(LazyComponent);
      }
    }]);

    return Tester;
  }(_react["default"].Component); // eslint-disable-next-line react/prefer-stateless-function


  var SuspenseWrapper = /*#__PURE__*/function (_React$Component3) {
    _inherits(SuspenseWrapper, _React$Component3);

    var _super3 = _createSuper(SuspenseWrapper);

    function SuspenseWrapper() {
      _classCallCheck(this, SuspenseWrapper);

      return _super3.apply(this, arguments);
    }

    _createClass(SuspenseWrapper, [{
      key: "render",
      value: function render() {
        return /*#__PURE__*/_react["default"].createElement(_react["default"].Suspense, {
          fallback: false
        }, /*#__PURE__*/_react["default"].createElement(Tester));
      }
    }]);

    return SuspenseWrapper;
  }(_react["default"].Component);

  _reactDom["default"].render( /*#__PURE__*/_react["default"].createElement(SuspenseWrapper), container);

  return inst._reactInternals.child;
}

module.exports = function detectFiberTags() {
  var supportsMode = typeof _react["default"].StrictMode !== 'undefined';
  var supportsContext = typeof _react["default"].createContext !== 'undefined';
  var supportsForwardRef = typeof _react["default"].forwardRef !== 'undefined';
  var supportsMemo = typeof _react["default"].memo !== 'undefined';
  var supportsProfiler = typeof _react["default"].unstable_Profiler !== 'undefined' || typeof _react["default"].Profiler !== 'undefined';
  var supportsSuspense = typeof _react["default"].Suspense !== 'undefined';
  var supportsLazy = typeof _react["default"].lazy !== 'undefined';

  function Fn() {
    return null;
  } // eslint-disable-next-line react/prefer-stateless-function


  var Cls = /*#__PURE__*/function (_React$Component4) {
    _inherits(Cls, _React$Component4);

    var _super4 = _createSuper(Cls);

    function Cls() {
      _classCallCheck(this, Cls);

      return _super4.apply(this, arguments);
    }

    _createClass(Cls, [{
      key: "render",
      value: function render() {
        return null;
      }
    }]);

    return Cls;
  }(_react["default"].Component);

  var Ctx = null;
  var FwdRef = null;
  var LazyComponent = null;

  if (supportsContext) {
    Ctx = /*#__PURE__*/_react["default"].createContext();
  }

  if (supportsForwardRef) {
    // React will warn if we don't have both arguments.
    // eslint-disable-next-line no-unused-vars
    FwdRef = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
      return null;
    });
  }

  if (supportsLazy) {
    LazyComponent = /*#__PURE__*/_react["default"].lazy(function () {
      return (0, _enzymeAdapterUtils.fakeDynamicImport)(function () {
        return null;
      });
    });
  }

  return {
    HostRoot: getFiber('test')["return"]["return"].tag,
    // Go two levels above to find the root
    ClassComponent: getFiber( /*#__PURE__*/_react["default"].createElement(Cls)).tag,
    Fragment: getFiber([['nested']]).tag,
    FunctionalComponent: getFiber( /*#__PURE__*/_react["default"].createElement(Fn)).tag,
    MemoSFC: supportsMemo ? getFiber( /*#__PURE__*/_react["default"].createElement( /*#__PURE__*/_react["default"].memo(Fn))).tag : -1,
    MemoClass: supportsMemo ? getFiber( /*#__PURE__*/_react["default"].createElement( /*#__PURE__*/_react["default"].memo(Cls))).tag : -1,
    HostPortal: getFiber( /*#__PURE__*/_reactDom["default"].createPortal(null, global.document.createElement('div'))).tag,
    HostComponent: getFiber( /*#__PURE__*/_react["default"].createElement('span')).tag,
    HostText: getFiber('text').tag,
    Mode: supportsMode ? getFiber( /*#__PURE__*/_react["default"].createElement(_react["default"].StrictMode)).tag : -1,
    ContextConsumer: supportsContext ? getFiber( /*#__PURE__*/_react["default"].createElement(Ctx.Consumer, null, function () {
      return null;
    })).tag : -1,
    ContextProvider: supportsContext ? getFiber( /*#__PURE__*/_react["default"].createElement(Ctx.Provider, {
      value: null
    }, null)).tag : -1,
    ForwardRef: supportsForwardRef ? getFiber( /*#__PURE__*/_react["default"].createElement(FwdRef)).tag : -1,
    Profiler: supportsProfiler ? getFiber( /*#__PURE__*/_react["default"].createElement(_react["default"].Profiler || _react["default"].unstable_Profiler, {
      id: 'mock',
      onRender: function onRender() {}
    })).tag : -1,
    Suspense: supportsSuspense ? getFiber( /*#__PURE__*/_react["default"].createElement(_react["default"].Suspense, {
      fallback: false
    })).tag : -1,
    Lazy: supportsLazy ? getLazyFiber(LazyComponent).tag : -1,
    OffscreenComponent: getLazyFiber('div')["return"]["return"].tag
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRGaWJlciIsImVsZW1lbnQiLCJjb250YWluZXIiLCJnbG9iYWwiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpbnN0IiwiVGVzdGVyIiwiUmVhY3QiLCJDb21wb25lbnQiLCJSZWFjdERPTSIsInJlbmRlciIsIl9yZWFjdEludGVybmFscyIsImNoaWxkIiwiZ2V0TGF6eUZpYmVyIiwiTGF6eUNvbXBvbmVudCIsIlN1c3BlbnNlV3JhcHBlciIsIlN1c3BlbnNlIiwiZmFsbGJhY2siLCJtb2R1bGUiLCJleHBvcnRzIiwiZGV0ZWN0RmliZXJUYWdzIiwic3VwcG9ydHNNb2RlIiwiU3RyaWN0TW9kZSIsInN1cHBvcnRzQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJzdXBwb3J0c0ZvcndhcmRSZWYiLCJmb3J3YXJkUmVmIiwic3VwcG9ydHNNZW1vIiwibWVtbyIsInN1cHBvcnRzUHJvZmlsZXIiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIlByb2ZpbGVyIiwic3VwcG9ydHNTdXNwZW5zZSIsInN1cHBvcnRzTGF6eSIsImxhenkiLCJGbiIsIkNscyIsIkN0eCIsIkZ3ZFJlZiIsInByb3BzIiwicmVmIiwiZmFrZUR5bmFtaWNJbXBvcnQiLCJIb3N0Um9vdCIsInRhZyIsIkNsYXNzQ29tcG9uZW50IiwiRnJhZ21lbnQiLCJGdW5jdGlvbmFsQ29tcG9uZW50IiwiTWVtb1NGQyIsIk1lbW9DbGFzcyIsIkhvc3RQb3J0YWwiLCJjcmVhdGVQb3J0YWwiLCJIb3N0Q29tcG9uZW50IiwiSG9zdFRleHQiLCJNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJQcm92aWRlciIsInZhbHVlIiwiRm9yd2FyZFJlZiIsImlkIiwib25SZW5kZXIiLCJMYXp5IiwiT2Zmc2NyZWVuQ29tcG9uZW50Il0sInNvdXJjZXMiOlsiLi4vc3JjL2RldGVjdEZpYmVyVGFncy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcclxuaW1wb3J0IHsgZmFrZUR5bmFtaWNJbXBvcnQgfSBmcm9tICdlbnp5bWUtYWRhcHRlci11dGlscyc7XHJcblxyXG5mdW5jdGlvbiBnZXRGaWJlcihlbGVtZW50KSB7XHJcbiAgY29uc3QgY29udGFpbmVyID0gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gIGxldCBpbnN0ID0gbnVsbDtcclxuICBjbGFzcyBUZXN0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICBpbnN0ID0gdGhpcztcclxuICAgICAgcmV0dXJuIGVsZW1lbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFJlYWN0RE9NLnJlbmRlcihSZWFjdC5jcmVhdGVFbGVtZW50KFRlc3RlciksIGNvbnRhaW5lcik7XHJcbiAgcmV0dXJuIGluc3QuX3JlYWN0SW50ZXJuYWxzLmNoaWxkO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRMYXp5RmliZXIoTGF6eUNvbXBvbmVudCkge1xyXG4gIGNvbnN0IGNvbnRhaW5lciA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICBsZXQgaW5zdCA9IG51bGw7XHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3ByZWZlci1zdGF0ZWxlc3MtZnVuY3Rpb25cclxuICBjbGFzcyBUZXN0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICBpbnN0ID0gdGhpcztcclxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGF6eUNvbXBvbmVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9wcmVmZXItc3RhdGVsZXNzLWZ1bmN0aW9uXHJcbiAgY2xhc3MgU3VzcGVuc2VXcmFwcGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXHJcbiAgICAgICAgUmVhY3QuU3VzcGVuc2UsXHJcbiAgICAgICAgeyBmYWxsYmFjazogZmFsc2UgfSxcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRlc3RlciksXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFJlYWN0RE9NLnJlbmRlcihSZWFjdC5jcmVhdGVFbGVtZW50KFN1c3BlbnNlV3JhcHBlciksIGNvbnRhaW5lcik7XHJcbiAgcmV0dXJuIGluc3QuX3JlYWN0SW50ZXJuYWxzLmNoaWxkO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRldGVjdEZpYmVyVGFncygpIHtcclxuICBjb25zdCBzdXBwb3J0c01vZGUgPSB0eXBlb2YgUmVhY3QuU3RyaWN0TW9kZSAhPT0gJ3VuZGVmaW5lZCc7XHJcbiAgY29uc3Qgc3VwcG9ydHNDb250ZXh0ID0gdHlwZW9mIFJlYWN0LmNyZWF0ZUNvbnRleHQgIT09ICd1bmRlZmluZWQnO1xyXG4gIGNvbnN0IHN1cHBvcnRzRm9yd2FyZFJlZiA9IHR5cGVvZiBSZWFjdC5mb3J3YXJkUmVmICE9PSAndW5kZWZpbmVkJztcclxuICBjb25zdCBzdXBwb3J0c01lbW8gPSB0eXBlb2YgUmVhY3QubWVtbyAhPT0gJ3VuZGVmaW5lZCc7XHJcbiAgY29uc3Qgc3VwcG9ydHNQcm9maWxlciA9IHR5cGVvZiBSZWFjdC51bnN0YWJsZV9Qcm9maWxlciAhPT0gJ3VuZGVmaW5lZCcgfHwgdHlwZW9mIFJlYWN0LlByb2ZpbGVyICE9PSAndW5kZWZpbmVkJztcclxuICBjb25zdCBzdXBwb3J0c1N1c3BlbnNlID0gdHlwZW9mIFJlYWN0LlN1c3BlbnNlICE9PSAndW5kZWZpbmVkJztcclxuICBjb25zdCBzdXBwb3J0c0xhenkgPSB0eXBlb2YgUmVhY3QubGF6eSAhPT0gJ3VuZGVmaW5lZCc7XHJcblxyXG4gIGZ1bmN0aW9uIEZuKCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9wcmVmZXItc3RhdGVsZXNzLWZ1bmN0aW9uXHJcbiAgY2xhc3MgQ2xzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGxldCBDdHggPSBudWxsO1xyXG4gIGxldCBGd2RSZWYgPSBudWxsO1xyXG4gIGxldCBMYXp5Q29tcG9uZW50ID0gbnVsbDtcclxuICBpZiAoc3VwcG9ydHNDb250ZXh0KSB7XHJcbiAgICBDdHggPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XHJcbiAgfVxyXG4gIGlmIChzdXBwb3J0c0ZvcndhcmRSZWYpIHtcclxuICAgIC8vIFJlYWN0IHdpbGwgd2FybiBpZiB3ZSBkb24ndCBoYXZlIGJvdGggYXJndW1lbnRzLlxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXHJcbiAgICBGd2RSZWYgPSBSZWFjdC5mb3J3YXJkUmVmKChwcm9wcywgcmVmKSA9PiBudWxsKTtcclxuICB9XHJcbiAgaWYgKHN1cHBvcnRzTGF6eSkge1xyXG4gICAgTGF6eUNvbXBvbmVudCA9IFJlYWN0LmxhenkoKCkgPT4gZmFrZUR5bmFtaWNJbXBvcnQoKCkgPT4gbnVsbCkpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIEhvc3RSb290OiBnZXRGaWJlcigndGVzdCcpLnJldHVybi5yZXR1cm4udGFnLCAvLyBHbyB0d28gbGV2ZWxzIGFib3ZlIHRvIGZpbmQgdGhlIHJvb3RcclxuICAgIENsYXNzQ29tcG9uZW50OiBnZXRGaWJlcihSZWFjdC5jcmVhdGVFbGVtZW50KENscykpLnRhZyxcclxuICAgIEZyYWdtZW50OiBnZXRGaWJlcihbWyduZXN0ZWQnXV0pLnRhZyxcclxuICAgIEZ1bmN0aW9uYWxDb21wb25lbnQ6IGdldEZpYmVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRm4pKS50YWcsXHJcbiAgICBNZW1vU0ZDOiBzdXBwb3J0c01lbW9cclxuICAgICAgPyBnZXRGaWJlcihSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0Lm1lbW8oRm4pKSkudGFnXHJcbiAgICAgIDogLTEsXHJcbiAgICBNZW1vQ2xhc3M6IHN1cHBvcnRzTWVtb1xyXG4gICAgICA/IGdldEZpYmVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QubWVtbyhDbHMpKSkudGFnXHJcbiAgICAgIDogLTEsXHJcbiAgICBIb3N0UG9ydGFsOiBnZXRGaWJlcihSZWFjdERPTS5jcmVhdGVQb3J0YWwobnVsbCwgZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpKSkudGFnLFxyXG4gICAgSG9zdENvbXBvbmVudDogZ2V0RmliZXIoUmVhY3QuY3JlYXRlRWxlbWVudCgnc3BhbicpKS50YWcsXHJcbiAgICBIb3N0VGV4dDogZ2V0RmliZXIoJ3RleHQnKS50YWcsXHJcbiAgICBNb2RlOiBzdXBwb3J0c01vZGVcclxuICAgICAgPyBnZXRGaWJlcihSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LlN0cmljdE1vZGUpKS50YWdcclxuICAgICAgOiAtMSxcclxuICAgIENvbnRleHRDb25zdW1lcjogc3VwcG9ydHNDb250ZXh0XHJcbiAgICAgID8gZ2V0RmliZXIoUmVhY3QuY3JlYXRlRWxlbWVudChDdHguQ29uc3VtZXIsIG51bGwsICgpID0+IG51bGwpKS50YWdcclxuICAgICAgOiAtMSxcclxuICAgIENvbnRleHRQcm92aWRlcjogc3VwcG9ydHNDb250ZXh0XHJcbiAgICAgID8gZ2V0RmliZXIoUmVhY3QuY3JlYXRlRWxlbWVudChDdHguUHJvdmlkZXIsIHsgdmFsdWU6IG51bGwgfSwgbnVsbCkpLnRhZ1xyXG4gICAgICA6IC0xLFxyXG4gICAgRm9yd2FyZFJlZjogc3VwcG9ydHNGb3J3YXJkUmVmXHJcbiAgICAgID8gZ2V0RmliZXIoUmVhY3QuY3JlYXRlRWxlbWVudChGd2RSZWYpKS50YWdcclxuICAgICAgOiAtMSxcclxuICAgIFByb2ZpbGVyOiBzdXBwb3J0c1Byb2ZpbGVyXHJcbiAgICAgID8gZ2V0RmliZXIoUmVhY3QuY3JlYXRlRWxlbWVudCgoUmVhY3QuUHJvZmlsZXIgfHwgUmVhY3QudW5zdGFibGVfUHJvZmlsZXIpLCB7IGlkOiAnbW9jaycsIG9uUmVuZGVyKCkge30gfSkpLnRhZ1xyXG4gICAgICA6IC0xLFxyXG4gICAgU3VzcGVuc2U6IHN1cHBvcnRzU3VzcGVuc2VcclxuICAgICAgPyBnZXRGaWJlcihSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LlN1c3BlbnNlLCB7IGZhbGxiYWNrOiBmYWxzZSB9KSkudGFnXHJcbiAgICAgIDogLTEsXHJcbiAgICBMYXp5OiBzdXBwb3J0c0xhenlcclxuICAgICAgPyBnZXRMYXp5RmliZXIoTGF6eUNvbXBvbmVudCkudGFnXHJcbiAgICAgIDogLTEsXHJcbiAgICBPZmZzY3JlZW5Db21wb25lbnQ6IGdldExhenlGaWJlcignZGl2JykucmV0dXJuLnJldHVybi50YWcsXHJcbiAgfTtcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLFNBQVNBLFFBQVQsQ0FBa0JDLE9BQWxCLEVBQTJCO0VBQ3pCLElBQU1DLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxRQUFQLENBQWdCQyxhQUFoQixDQUE4QixLQUE5QixDQUFsQjtFQUNBLElBQUlDLElBQUksR0FBRyxJQUFYOztFQUZ5QixJQUduQkMsTUFIbUI7SUFBQTs7SUFBQTs7SUFBQTtNQUFBOztNQUFBO0lBQUE7O0lBQUE7TUFBQTtNQUFBLE9BSXZCLGtCQUFTO1FBQ1BELElBQUksR0FBRyxJQUFQO1FBQ0EsT0FBT0wsT0FBUDtNQUNEO0lBUHNCOztJQUFBO0VBQUEsRUFHSk8saUJBQUEsQ0FBTUMsU0FIRjs7RUFTekJDLG9CQUFBLENBQVNDLE1BQVQsZUFBZ0JI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
//# sourceMappingURL=detectFiberTags.js.map