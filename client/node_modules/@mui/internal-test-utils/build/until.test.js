"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const chai_1 = require("chai");
const prop_types_1 = __importDefault(require("prop-types"));
const enzyme_1 = require("enzyme");
const until_1 = __importDefault(require("./until"));
function Div() {
    return React.createElement("div", null);
}
const hoc = (Component) => function Wrapper() {
    return React.createElement(Component, null);
};
describe('until', () => {
    it('shallow renders the current wrapper one level deep', () => {
        const EnhancedDiv = hoc(Div);
        const wrapper = until_1.default.call((0, enzyme_1.shallow)(React.createElement(EnhancedDiv, null)), 'Div');
        (0, chai_1.expect)(wrapper.contains(React.createElement("div", null))).to.equal(true);
    });
    it('shallow renders the current wrapper several levels deep', () => {
        const EnhancedDiv = hoc(hoc(hoc(Div)));
        const wrapper = until_1.default.call((0, enzyme_1.shallow)(React.createElement(EnhancedDiv, null)), 'Div');
        (0, chai_1.expect)(wrapper.contains(React.createElement("div", null))).to.equal(true);
    });
    it('stops shallow rendering when the wrapper is empty', () => {
        const nullHoc = () => () => null;
        const EnhancedDiv = nullHoc();
        const wrapper = until_1.default.call((0, enzyme_1.shallow)(React.createElement(EnhancedDiv, null)), 'Div');
        (0, chai_1.expect)(wrapper.html()).to.equal(null);
    });
    it('shallow renders as much as possible when no selector is provided', () => {
        const EnhancedDiv = hoc(hoc(Div));
        const wrapper = until_1.default.call((0, enzyme_1.shallow)(React.createElement(EnhancedDiv, null)));
        (0, chai_1.expect)(wrapper.contains(React.createElement("div", null))).to.equal(true);
    });
    it('shallow renders the current wrapper even if the selector never matches', () => {
        const EnhancedDiv = hoc(Div);
        const wrapper = until_1.default.call((0, enzyme_1.shallow)(React.createElement(EnhancedDiv, null)), 'NotDiv');
        (0, chai_1.expect)(wrapper.contains(React.createElement("div", null))).to.equal(true);
    });
    it('stops shallow rendering when it encounters a HTML element', () => {
        const wrapper = until_1.default.call((0, enzyme_1.shallow)(React.createElement("div", null,
            React.createElement(Div, null))), 'Div');
        (0, chai_1.expect)(wrapper.contains(React.createElement("div", null,
            React.createElement(Div, null)))).to.equal(true);
    });
    it('throws when until called on an empty wrapper', () => {
        (0, chai_1.expect)(() => {
            until_1.default.call((0, enzyme_1.shallow)(React.createElement(Div, null)).find('Foo'), 'div');
        }).to.throw(Error);
    });
    it('shallow renders non-root wrappers', () => {
        function Container() {
            return (React.createElement("div", null,
                React.createElement(Div, null)));
        }
        const wrapper = until_1.default.call((0, enzyme_1.shallow)(React.createElement(Container, null)).find(Div));
        (0, chai_1.expect)(wrapper.contains(React.createElement("div", null))).to.equal(true);
    });
    // eslint-disable-next-line react/prefer-stateless-function
    class Foo extends React.Component {
        render() {
            return React.createElement(Div, null);
        }
    }
    Foo.contextTypes = {
        quux: prop_types_1.default.bool.isRequired,
    };
    it('context propagation passes down context from the root component', () => {
        const EnhancedFoo = hoc(Foo);
        const options = { context: { quux: true } };
        const wrapper = until_1.default.call((0, enzyme_1.shallow)(React.createElement(EnhancedFoo, null), options), 'Foo', options);
        (0, chai_1.expect)(wrapper.context('quux')).to.equal(true);
        (0, chai_1.expect)(wrapper.contains(React.createElement(Div, null))).to.equal(true);
    });
    class Bar extends React.Component {
        getChildContext() {
            return { quux: true };
        }
        render() {
            return React.createElement(Foo, null);
        }
    }
    Bar.childContextTypes = { quux: prop_types_1.default.bool };
    it('context propagation passes down context from an intermediary component', () => {
        const EnhancedBar = hoc(Bar);
        const wrapper = until_1.default.call((0, enzyme_1.shallow)(React.createElement(EnhancedBar, null)), 'Foo');
        (0, chai_1.expect)(wrapper.context('quux')).to.equal(true);
        (0, chai_1.expect)(wrapper.contains(React.createElement(Div, null))).to.equal(true);
    });
});
//# sourceMappingURL=until.test.js.map