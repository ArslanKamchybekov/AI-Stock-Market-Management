import * as React from 'react';
import { cleanup, queries, queryHelpers, RenderResult } from '@testing-library/react/pure';
declare function queryAllDescriptionsOf(baseElement: HTMLElement, element: Element): HTMLElement[];
declare const customQueries: {
    queryDescriptionOf: queryHelpers.QueryBy<[Element]>;
    queryAllDescriptionsOf: typeof queryAllDescriptionsOf;
    getDescriptionOf: queryHelpers.GetBy<[Element]>;
    getAllDescriptionsOf: queryHelpers.GetAllBy<[Element]>;
    findDescriptionOf: queryHelpers.FindBy<[Element]>;
    findAllDescriptionsOf: queryHelpers.FindAllBy<[Element]>;
    /**
     * @deprecated Use `queryAllByTestId` instead
     */
    queryAllByMuiTest: (container: HTMLElement, id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    /**
     * @deprecated Use `queryByTestId` instead
     */
    queryByMuiTest: queryHelpers.QueryBy<[dataMuiTest: import("@testing-library/react/pure").Matcher]>;
    /**
     * @deprecated Use `getAllByTestId` instead
     */
    getAllByMuiTest: queryHelpers.GetAllBy<[dataMuiTest: import("@testing-library/react/pure").Matcher]>;
    /**
     * @deprecated Use `getByTestId` instead
     */
    getByMuiTest: queryHelpers.GetBy<[dataMuiTest: import("@testing-library/react/pure").Matcher]>;
    /**
     * @deprecated Use `findAllByTestId` instead
     */
    findAllByMuiTest: queryHelpers.FindAllBy<[dataMuiTest: import("@testing-library/react/pure").Matcher]>;
    /**
     * @deprecated Use `findByTestId` instead
     */
    findByMuiTest: queryHelpers.FindBy<[dataMuiTest: import("@testing-library/react/pure").Matcher]>;
};
interface RenderConfiguration {
    /**
     * https://testing-library.com/docs/react-testing-library/api#container
     */
    container?: HTMLElement;
    /**
     * if true does not cleanup before mount
     */
    disableUnmount?: boolean;
    /**
     * wrap in React.StrictMode?
     */
    strict?: boolean;
    /**
     * Set to `true` if the test fails due to [Strict Effects](https://github.com/reactwg/react-18/discussions/19).
     */
    strictEffects?: boolean;
    wrapper: React.JSXElementConstructor<{
        children?: React.ReactNode;
    }>;
}
export type RenderOptions = Partial<RenderConfiguration>;
export interface MuiRenderResult extends RenderResult<typeof queries & typeof customQueries> {
    forceUpdate(): void;
    /**
     * convenience helper. Better than repeating all props.
     */
    setProps(props: object): void;
}
export interface MuiRenderToStringResult {
    container: HTMLElement;
    hydrate(): MuiRenderResult;
}
interface Clock {
    /**
     * Runs all timers until there are no more remaining.
     * WARNING: This may cause an infinite loop if a timeout constantly schedules another timeout.
     * Prefer to to run only pending timers with `runToLast` and unmount your component directly.
     */
    runAll(): void;
    /**
     * Runs only the currently pending timers.
     */
    runToLast(): void;
    /**
     * Tick the clock ahead `timeoutMS` milliseconds.
     * @param timeoutMS
     */
    tick(timeoutMS: number): void;
    /**
     * Returns true if we're running with "real" i.e. native timers.
     */
    isReal(): boolean;
    /**
     * Runs the current test suite (i.e. `describe` block) with fake timers.
     */
    withFakeTimers(): void;
    /**
     * Restore the real timer
     */
    restore(): void;
}
type ClockConfig = undefined | number | Date;
interface Renderer {
    clock: Clock;
    render(element: React.ReactElement<any>, options?: RenderOptions): MuiRenderResult;
    renderToString(element: React.ReactElement<any>, options?: RenderOptions): MuiRenderToStringResult;
}
export interface CreateRendererOptions extends Pick<RenderOptions, 'strict' | 'strictEffects'> {
    /**
     * @default 'real'
     */
    clock?: 'fake' | 'real';
    clockConfig?: ClockConfig;
}
export declare function createRenderer(globalOptions?: CreateRendererOptions): Renderer;
declare const fireEvent: import("@testing-library/react/pure").FireFunction & import("@testing-library/react/pure").FireObject;
export declare function fireTouchChangedEvent(target: Element, type: 'touchstart' | 'touchmove' | 'touchend', options: {
    changedTouches: Array<Pick<TouchInit, 'clientX' | 'clientY'>>;
}): void;
declare function act<T>(callback: () => T | Promise<T>): Promise<T>;
declare function act(callback: () => void): void;
export * from '@testing-library/react/pure';
export { act, cleanup, fireEvent };
export declare const screen: {
    getByLabelText<T extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined): T;
    getAllByLabelText<T_1 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined): T_1[];
    queryByLabelText<T_2 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined): T_2 | null;
    queryAllByLabelText<T_3 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined): T_3[];
    findByLabelText<T_4 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_4>;
    findAllByLabelText<T_5 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_5[]>;
    getByPlaceholderText<T_6 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_6;
    getAllByPlaceholderText<T_7 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_7[];
    queryByPlaceholderText<T_8 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_8 | null;
    queryAllByPlaceholderText<T_9 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_9[];
    findByPlaceholderText<T_10 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_10>;
    findAllByPlaceholderText<T_11 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_11[]>;
    getByText<T_12 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined): T_12;
    getAllByText<T_13 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined): T_13[];
    queryByText<T_14 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined): T_14 | null;
    queryAllByText<T_15 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined): T_15[];
    findByText<T_16 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_16>;
    findAllByText<T_17 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_17[]>;
    getByAltText<T_18 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_18;
    getAllByAltText<T_19 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_19[];
    queryByAltText<T_20 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_20 | null;
    queryAllByAltText<T_21 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_21[];
    findByAltText<T_22 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_22>;
    findAllByAltText<T_23 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_23[]>;
    getByTitle<T_24 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_24;
    getAllByTitle<T_25 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_25[];
    queryByTitle<T_26 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_26 | null;
    queryAllByTitle<T_27 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_27[];
    findByTitle<T_28 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_28>;
    findAllByTitle<T_29 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_29[]>;
    getByDisplayValue<T_30 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_30;
    getAllByDisplayValue<T_31 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_31[];
    queryByDisplayValue<T_32 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_32 | null;
    queryAllByDisplayValue<T_33 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_33[];
    findByDisplayValue<T_34 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_34>;
    findAllByDisplayValue<T_35 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_35[]>;
    getByRole<T_36 extends HTMLElement = HTMLElement>(role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined): T_36;
    getAllByRole<T_37 extends HTMLElement = HTMLElement>(role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined): T_37[];
    queryByRole<T_38 extends HTMLElement = HTMLElement>(role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined): T_38 | null;
    queryAllByRole<T_39 extends HTMLElement = HTMLElement>(role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined): T_39[];
    findByRole<T_40 extends HTMLElement = HTMLElement>(role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_40>;
    findAllByRole<T_41 extends HTMLElement = HTMLElement>(role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_41[]>;
    getByTestId<T_42 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_42;
    getAllByTestId<T_43 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_43[];
    queryByTestId<T_44 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_44 | null;
    queryAllByTestId<T_45 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined): T_45[];
    findByTestId<T_46 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_46>;
    findAllByTestId<T_47 extends HTMLElement = HTMLElement>(id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined): Promise<T_47[]>;
} & {
    queryDescriptionOf: (args_0: Element) => HTMLElement | null;
    queryAllDescriptionsOf: (element: Element) => HTMLElement[];
    getDescriptionOf: (args_0: Element) => HTMLElement;
    getAllDescriptionsOf: (args_0: Element) => HTMLElement[];
    findDescriptionOf: (args_0: Element, args_1?: undefined, args_2?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    findAllDescriptionsOf: (args_0: Element, args_1?: undefined, args_2?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
    queryAllByMuiTest: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    queryByMuiTest: (dataMuiTest: import("@testing-library/react/pure").Matcher) => HTMLElement | null;
    getAllByMuiTest: (dataMuiTest: import("@testing-library/react/pure").Matcher) => HTMLElement[];
    getByMuiTest: (dataMuiTest: import("@testing-library/react/pure").Matcher) => HTMLElement;
    findAllByMuiTest: (args_0: import("@testing-library/react/pure").Matcher, args_1?: undefined, args_2?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
    findByMuiTest: (args_0: import("@testing-library/react/pure").Matcher, args_1?: undefined, args_2?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    getByLabelText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined) => HTMLElement;
    getAllByLabelText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined) => HTMLElement[];
    queryByLabelText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined) => HTMLElement | null;
    queryAllByLabelText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined) => HTMLElement[];
    findByLabelText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    findAllByLabelText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
    getByPlaceholderText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement;
    getAllByPlaceholderText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    queryByPlaceholderText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement | null;
    queryAllByPlaceholderText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    findByPlaceholderText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    findAllByPlaceholderText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
    getByText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined) => HTMLElement;
    getAllByText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined) => HTMLElement[];
    queryByText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined) => HTMLElement | null;
    queryAllByText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined) => HTMLElement[];
    findByText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    findAllByText: (id: import("@testing-library/react/pure").Matcher, options?: queryHelpers.SelectorMatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
    getByAltText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement;
    getAllByAltText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    queryByAltText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement | null;
    queryAllByAltText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    findByAltText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    findAllByAltText: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
    getByTitle: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement;
    getAllByTitle: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    queryByTitle: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement | null;
    queryAllByTitle: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    findByTitle: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    findAllByTitle: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
    getByDisplayValue: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement;
    getAllByDisplayValue: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    queryByDisplayValue: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement | null;
    queryAllByDisplayValue: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    findByDisplayValue: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    findAllByDisplayValue: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
    getByRole: (role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => HTMLElement;
    getAllByRole: (role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => HTMLElement[];
    queryByRole: (role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => HTMLElement | null;
    queryAllByRole: (role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined) => HTMLElement[];
    findByRole: (role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    findAllByRole: (role: import("@testing-library/react/pure").ByRoleMatcher, options?: queries.ByRoleOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
    getByTestId: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement;
    getAllByTestId: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    queryByTestId: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement | null;
    queryAllByTestId: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined) => HTMLElement[];
    findByTestId: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement>;
    findAllByTestId: (id: import("@testing-library/react/pure").Matcher, options?: import("@testing-library/react/pure").MatcherOptions | undefined, waitForElementOptions?: import("@testing-library/react/pure").waitForOptions | undefined) => Promise<HTMLElement[]>;
};
//# sourceMappingURL=createRenderer.d.ts.map